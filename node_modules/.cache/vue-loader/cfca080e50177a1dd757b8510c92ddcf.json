{"remainingRequest":"/Users/fengwanjie/file/IdeaProjects/mall/mall-system/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fengwanjie/file/IdeaProjects/mall/mall-system/src/views/checkout/Checkoutt.vue?vue&type=style&index=0&id=732c7142&scoped=true&lang=css&","dependencies":[{"path":"/Users/fengwanjie/file/IdeaProjects/mall/mall-system/src/views/checkout/Checkoutt.vue","mtime":1678880471772},{"path":"/Users/fengwanjie/file/IdeaProjects/mall/mall-system/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fengwanjie/file/IdeaProjects/mall/mall-system/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/Users/fengwanjie/file/IdeaProjects/mall/mall-system/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fengwanjie/file/IdeaProjects/mall/mall-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fengwanjie/file/IdeaProjects/mall/mall-system/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5oZWFkZXIgewogIGhlaWdodDogNTBweDsKICBsaW5lLWhlaWdodDogNjBweDsKICBmb250LXdlaWdodDogNDAwOwp9Ci5oZWFkZXItc3BhbiB7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjA0LCAyMDQsIDIwNCwgMC41KTsKfQouc3ViLWhlYWRlciB7CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGRpc3BsYXk6IGZsZXg7Cn0KaDMsCmg0IHsKICBmb250LXdlaWdodDogNDAwOwp9Ci5saXN0LWJkIHsKICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgyMDQsIDIwNCwgMjA0LCAwLjUpOwogIG1hcmdpbi10b3A6IDEwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQouaXRlbS1oZWFkZXIgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQouYm90dG9tLWl0ZW0gewogIC8qIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDIwNCwgMjA0LCAyMDQsIDAuNSk7ICovCiAgZm9udC1zaXplOiAxNXB4Owp9Ci5iYiB7CiAgaGVpZ2h0OiA0MHB4OwogIGxpbmUtaGVpZ2h0OiA0MHB4Owp9Ci5tIHsKICBmb250LXNpemU6IDIwcHg7CiAgY29sb3I6ICNlNDM5M2M7CiAgZm9udC13ZWlnaHQ6IDcwMDsKfQouaW5mby1iZCB7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoMjA0LCAyMDQsIDIwNCwgMC41KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0OwogIHBhZGRpbmc6IDVweDsKICBwYWRkaW5nLWxlZnQ6IDIwcHg7Cn0K"},{"version":3,"sources":["Checkoutt.vue"],"names":[],"mappings":";AAkQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Checkoutt.vue","sourceRoot":"src/views/checkout","sourcesContent":["<template>\n  <div\n      style=\"\n      width: 80%;\n      margin-left: 50%;\n      transform: translate(-50%);\n      margin-bottom: 20px;\n    \"\n  >\n    <h3 class=\"header\">\n      <span class=\"header-span\"> 订单结算页面 </span>\n    </h3>\n    <div class=\"sub-header\">\n      <h4><i class=\"fas fa-list-ul\"></i> 商品列表</h4>\n    </div>\n\n    <el-row type=\"flex\">\n      <el-col :span=\"8\" class=\"item-header\">商品图片</el-col>\n      <el-col :span=\"8\" class=\"item-header\">商品名称</el-col>\n      <el-col :span=\"8\" class=\"item-header\">价格 x 数量</el-col>\n    </el-row>\n    <div class=\"list-bd\">\n      <CheckoutItem\n          v-for=\"(product, index) in products\"\n          :key=\"index\"\n          :cProduct=\"product\"\n      />\n    </div>\n    <div class=\"info-bd\">\n      <el-row type=\"flex\" justify=\"end\">\n        <el-col :span=\"4\" class=\"bottom-item\" style=\"color: #999\">\n          寄送至：{{ address }}\n        </el-col>\n        <el-col :span=\"4\" class=\"bottom-item\" style=\"color: #999\">\n          收件人：{{ realName }}\n        </el-col>\n        <el-col :span=\"10\"></el-col>\n        <el-col :span=\"3\" class=\"bottom-item\">共 {{ total }} 件</el-col>\n        <el-col :span=\"5\" class=\"bottom-item\"\n        >商品原总价：￥{{ originPrice }}\n        </el-col>\n      </el-row>\n      <el-row type=\"flex\" justify=\"end\">\n        <el-col :span=\"4\" class=\"bottom-item bb\"\n        >已优惠： ￥{{ (originPrice - this.money).toFixed(2) }}\n        </el-col>\n        <el-col :span=\"5\" class=\"bottom-item bb\"\n        >应付金额：\n          <span class=\"m\"> ￥{{ this.money.toFixed(2) }} </span>\n        </el-col>\n      </el-row>\n    </div>\n    <el-row type=\"flex\" justify=\"end\" style=\"margin-top: 10px\">\n      <el-button type=\"info\" @click=\"cancel\">取消订单</el-button>\n      <el-button type=\"success\" @click=\"submit\">提交订单</el-button>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport request from '../../utils/request'\nimport CheckoutItem from './CheckoutItem.vue'\nexport default {\n  data() {\n    return {\n      products: [],\n      total: 0,\n      money: 0,\n      address: '',\n      realName: '',\n      timer: null,\n      shopId: 0,\n      map: new Map,\n      orderAmountMap: new Map\n    }\n  },\n  created() {\n    let items = JSON.parse(sessionStorage.getItem('checkout'))\n    this.products = items.cartProducts\n    // this.getShopId()\n    this.total = items.total\n    this.money = items.money\n    let uId = sessionStorage.getItem('userId')\n    request.get('/user/' + uId).then((res) => {\n      this.realName = res.data.realName\n      this.address = res.data.address\n    })\n\n    this.map = new Map();\n    this.orderAmountMap = new Map();\n    for(let i = 0;i < this.products.length;i++) {\n      this.getShopId2(i)\n    }\n  },\n\n  components: {\n    CheckoutItem\n  },\n  computed: {\n    originPrice() {\n      return this.products\n          .reduce((preV, curP) => preV + curP.productPrice * curP.count, 0)\n          .toFixed(2)\n    }\n  },\n  methods: {\n    cancel() {\n      sessionStorage.removeItem('checkout')\n      this.$router.back()\n    },\n    getShopId() {\n      request\n          .get('/shop/product_id/' + this.products[0].productId)\n          .then((res) => {\n            this.shopId = res\n          })\n    },\n    getShopId2(i) {\n      request\n          .get('/shop/product_id/' + this.products[i].productId)\n          .then((res) => {\n            if(this.map.has(res)) {\n              this.map.get(res).add(this.products[i])\n            }else {\n              let set = new Set();\n              set.add(this.products[i])\n              this.map.set(res,set)\n            }\n            if(i == this.products.length - 1) {\n              this.evalOrderAmount(this)\n            }\n          })\n\n    },\n\n    evalOrderAmount(_this) {\n      this.map.forEach(function (set,key) {\n        let orderAmount = 0\n        let shopId = key\n        set.forEach(function(p) {\n          request\n              .get('/product/' + p.productId)\n              .then((res) => {\n                orderAmount += res.productPrice * res.discount * p.count;\n                (_this.orderAmountMap).set(shopId,orderAmount)\n              })\n              .catch((err) => {\n                console.log(err)\n              })\n        })\n\n      })\n    },\n\n    submit() {\n      console.log(this.map)\n      let flag = 1\n      let uId = sessionStorage.getItem('userId')\n      for (let [key, set] of this.map.entries()) {\n        let orderN = this.randomNo()\n        let orderAmount = this.orderAmountMap.get(key)\n        let shopId = key\n\n        let orderMaster = {\n          orderNumber: orderN,\n          buyerId: uId,\n          orderAmount: orderAmount.toFixed(2),\n          shopId: shopId\n        }\n\n        request\n            .post('/order/master', orderMaster)\n            .then((res) => {\n              if (res.code !== '0') {\n                flag = 0\n              }\n            })\n            .catch((err) => {\n              console.log(err)\n            })\n\n        set.forEach(function(p){\n          let item = {\n            orderNumber: orderN,\n            productId: p.productId,\n            count: p.count\n          }\n          console.log(item)\n          request\n              .post('/order/detail', item)\n              .then((res) => {\n                if (res.code === '0') {\n                  console.log(res.msg)\n                } else {\n                  flag = 0\n                }\n              })\n              .catch((err) => {\n                flag = 0\n                console.log(err)\n              })\n        })\n\n      }\n\n      if (flag) {\n        this.$message({\n          message: '订单提交成功!',\n          type: 'success',\n          duration: 1000\n        })\n        // 清除本地存储中的订单信息\n        sessionStorage.removeItem('checkout')\n        // 清空购物车\n        request\n            .delete('/cart/all/' + uId)\n            .then((res) => {\n              console.log(res.msg)\n            })\n            .catch((err) => {\n              console.log(err)\n            })\n        clearTimeout(this.timer)\n        this.timer = setTimeout(() => {\n          this.$router.push('/submit_success')\n        }, 1000)\n      }\n\n\n    },\n    // 当前时间序列+6位随机数产生订单号\n    randomNo(j = 6) {\n      let randomNo = ''\n      for (let i = 0; i < j; i++) {\n        randomNo += Math.floor(Math.random() * 10)\n      }\n      let newD = new Date()\n      let y = newD.getFullYear()\n      let m = newD.getMonth() + 1\n      let d = newD.getDate()\n      let h = newD.getHours()\n      let mi = newD.getMinutes()\n      let s = newD.getSeconds()\n      let arr = [y, m, d, h, mi, s]\n      arr.forEach((e, i) => {\n        if (e < 10) {\n          arr[i] = '0' + e\n        }\n      })\n      let newDateNo = arr.join('')\n      randomNo = newDateNo + randomNo\n      return randomNo\n    }\n  }\n}\n</script>\n\n<style scoped>\n.header {\n  height: 50px;\n  line-height: 60px;\n  font-weight: 400;\n}\n.header-span {\n  border-bottom: 1px solid rgba(204, 204, 204, 0.5);\n}\n.sub-header {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n}\nh3,\nh4 {\n  font-weight: 400;\n}\n.list-bd {\n  border-top: 1px solid rgba(204, 204, 204, 0.5);\n  margin-top: 10px;\n  margin-bottom: 20px;\n}\n.item-header {\n  text-align: center;\n}\n.bottom-item {\n  /* border-bottom: 1px solid rgba(204, 204, 204, 0.5); */\n  font-size: 15px;\n}\n.bb {\n  height: 40px;\n  line-height: 40px;\n}\n.m {\n  font-size: 20px;\n  color: #e4393c;\n  font-weight: 700;\n}\n.info-bd {\n  border-top: 1px solid rgba(204, 204, 204, 0.5);\n  background-color: #f4f4f4;\n  padding: 5px;\n  padding-left: 20px;\n}\n</style>"]}]}